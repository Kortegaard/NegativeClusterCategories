!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AR	experiments/article.js	/^var AR = [[0, 3], [0, 11], [0, 15], [4, 11], [4, 15], [8, 11], [8, 15], [5, 8], [12, 15]];$/;"	A
CwObjectCollection	src/NegClustHelperFcts.js	/^    function CwObjectCollection(objs, w, e) {$/;"	F
CwObjectCollection	src/NegClustHelperFcts.ts	/^export class CwObjectCollection{$/;"	c
N	src/NegClustHelperFcts.js	/^                N = (e + 1) * (w + 1) - 2;$/;"	M
N	src/NegClustHelperFcts.js	/^        this.N = (w + 1) * (e + 1) - 2;$/;"	M
N	src/NegClustHelperFcts.js	/^    var N, i, j, add;$/;"	V
Ndist	src/NegClustHelperFcts.js	/^function Ndist(a, b, N) {$/;"	F
Ndist	src/NegClustHelperFcts.ts	/^export function Ndist(a:number,b:number, N:number){$/;"	f
Sigma	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.Sigma = function () {$/;"	M
Sigma	src/NegClustHelperFcts.js	/^function Sigma(s, N) {$/;"	F
Sigma	src/NegClustHelperFcts.ts	/^export function Sigma(s:any[], N:number){$/;"	f
_	src/NegClustHelperFcts.js	/^    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;$/;"	O
_hd	src/NegClustHelperFcts.js	/^    var _hd = 0;$/;"	V
_loop_1	experiments/ext2.js	/^var _loop_1 = function (i) {$/;"	F
_loop_1	experiments/mutation.js	/^var _loop_1 = function (i) {$/;"	F
_loop_1	experiments/new.js	/^var _loop_1 = function (i) {$/;"	F
a	src/NegClustHelperFcts.js	/^        var a = new CwObjectCollection([], this.w, this.e);$/;"	V
a	src/NegClustHelperFcts.js	/^        var a = new CwObjectCollection(this.objectList, this.w, this.e);$/;"	V
a	src/NegClustHelperFcts.js	/^    var a = new CwObjectCollection(collectedObjs, A.w, A.e);$/;"	V
a	src/NegClustHelperFcts.js	/^    var a = new CwObjectCollection(sms.objectList, sms.w, sms.e);$/;"	V
add	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.add = function (obj) {$/;"	M
arrString	src/NegClustHelperFcts.js	/^    var arrString = "[" + arrows.map(function (d, i) { return "[" + d.map(function (b) { return (b + 1); }).toString() + ", \\"a" + i + "\\"]"; }).toString() + "]";$/;"	V
arrows	src/NegClustHelperFcts.js	/^    var arrows = [];$/;"	A
collectionEqual	src/NegClustHelperFcts.js	/^function collectionEqual(A, B) {$/;"	F
collectionEqual	src/NegClustHelperFcts.ts	/^export function collectionEqual(A: CwObjectCollection, B: CwObjectCollection){$/;"	f
composition_module	src/NegClustHelperFcts.js	/^    var composition_module = [];$/;"	A
compositions	src/NegClustHelperFcts.js	/^    var compositions = [];$/;"	A
contains	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.contains = function (obj) {$/;"	M
containsSet	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.containsSet = function (objs) {$/;"	M
currIndex	src/NegClustHelperFcts.js	/^    var currIndex = 0;$/;"	V
d	experiments/article.js	/^var d = new nch.CwObjectCollection([[0, 3], [4, 11], [5, 8], [12, 15]], 3, 4);$/;"	V
d	experiments/test.js	/^var d = new nch.CwObjectCollection([[0, 3], [5, 8], [10, 13], [14, 17]], 3, 4);$/;"	V
describe	tests/NegClustHelperFcts.test.js	/^describe('Testing Negative Cluster Category Functions', function () {$/;"	M
dimensionVectorToObject	src/NegClustHelperFcts.js	/^function dimensionVectorToObject(sms, dimensionvect) {$/;"	F
dimensionVectorToObject	src/NegClustHelperFcts.ts	/^export function dimensionVectorToObject(sms:CwObjectCollection, dimensionvect:number[]){$/;"	f
e	experiments/ext2.js	/^    var e = 4;$/;"	V
elements	src/NegClustHelperFcts.js	/^function elements() {$/;"	F
exec	src/NegClustHelperFcts.js	/^        exec(qpaCode, function (error, stdout, stderr) {$/;"	M
exports	jest.config.js	/^module.exports = {$/;"	P
ext	src/NegClustHelperFcts.js	/^function ext(c, a, w, N) {$/;"	F
ext	src/NegClustHelperFcts.ts	/^export function ext(c: [number, number], a:[number, number], w:number, N:number){$/;"	f
ext2Agree	src/NegClustHelperFcts.js	/^function ext2Agree(sms) {$/;"	F
ext2Agree	src/NegClustHelperFcts.ts	/^export function ext2Agree(sms: CwObjectCollection){$/;"	f
extension	src/NegClustHelperFcts.js	/^function extension(A, B) {$/;"	F
extension	src/NegClustHelperFcts.ts	/^export function extension(A: CwObjectCollection, B: CwObjectCollection){$/;"	f
extensionClose	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.extensionClose = function () {$/;"	M
find	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.find = function (obj) {$/;"	M
findIndex	experiments/article.js	/^function findIndex(obj) {$/;"	F
findIndex	experiments/article.ts	/^function findIndex(obj: [number, number]){$/;"	f
generateIndecomposables	src/NegClustHelperFcts.js	/^function generateIndecomposables(w, e) {$/;"	F
getDiagonalDifferenece	src/NegClustHelperFcts.js	/^function getDiagonalDifferenece(a, b, N) {$/;"	F
getDiagonalDifferenece	src/NegClustHelperFcts.ts	/^export function getDiagonalDifferenece(a: any[], b: any[], N:number){$/;"	f
getRndInteger	src/NegClustHelperFcts.js	/^    function getRndInteger(min, max) {$/;"	F
getRndInteger	src/NegClustHelperFcts.ts	/^    function getRndInteger(min: number, max: number) {$/;"	f
getSharedEndpoint	src/NegClustHelperFcts.js	/^function getSharedEndpoint(a, b) {$/;"	F
getSharedEndpoint	src/NegClustHelperFcts.ts	/^export function getSharedEndpoint(a: any[], b: any[]){$/;"	f
helper	src/NegClustHelperFcts.js	/^    function helper(start, end, first) {$/;"	F
helper	src/NegClustHelperFcts.ts	/^    function helper(start:number, end:number, first:boolean):[number, number][]{$/;"	f
homDim	src/NegClustHelperFcts.js	/^function homDim(s1, s2, w, e) {$/;"	F
homDim	src/NegClustHelperFcts.ts	/^export function homDim(s1:any[], s2:any[], w:number, e:number){$/;"	f
i	src/NegClustHelperFcts.js	/^    var N, i, j, add;$/;"	V
i	src/NegClustHelperFcts.js	/^    var i;$/;"	V
ideal	src/NegClustHelperFcts.js	/^    var ideal = [];$/;"	A
intersection	src/NegClustHelperFcts.js	/^function intersection(A, B) {$/;"	F
intersection	src/NegClustHelperFcts.ts	/^export function intersection(A: CwObjectCollection, B: CwObjectCollection){$/;"	f
isCrossing	src/NegClustHelperFcts.js	/^function isCrossing(a, b) {$/;"	F
isCrossing	src/NegClustHelperFcts.ts	/^export function isCrossing(a: any[], b: any[]): boolean{$/;"	f
isEn	src/NegClustHelperFcts.js	/^function isEn(sms, n) {$/;"	F
isEn	src/NegClustHelperFcts.ts	/^export function isEn(sms: CwObjectCollection, n: number){$/;"	f
isExtensionClosed	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.isExtensionClosed = function () {$/;"	M
isHomBetweenCollections	src/NegClustHelperFcts.js	/^function isHomBetweenCollections(A, B) {$/;"	F
isHomBetweenCollections	src/NegClustHelperFcts.ts	/^export function isHomBetweenCollections(A: CwObjectCollection, B: CwObjectCollection): boolean{$/;"	f
isNOrdered	src/NegClustHelperFcts.js	/^function isNOrdered(n1, n2, n3, N) {$/;"	F
isNOrdered	src/NegClustHelperFcts.ts	/^export function isNOrdered(n1: number, n2: number, n3: number, N: number){$/;"	f
isSimpleMindedSystem	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.isSimpleMindedSystem = function () {$/;"	M
isWDiagonal	src/NegClustHelperFcts.js	/^function isWDiagonal(a, w) {$/;"	F
isWDiagonal	src/NegClustHelperFcts.ts	/^export function isWDiagonal(a: any[], w: number): boolean{$/;"	f
j	src/NegClustHelperFcts.js	/^    var N, i, j, add;$/;"	V
leftPerpInCollection	src/NegClustHelperFcts.js	/^function leftPerpInCollection(set, inColl) {$/;"	F
leftPerpInCollection	src/NegClustHelperFcts.ts	/^export function leftPerpInCollection(set:[number, number][], inColl:CwObjectCollection){$/;"	f
maxAmount	experiments/article.js	/^var maxAmount = [];$/;"	A
maxAmount	experiments/mutation.js	/^var maxAmount = [];$/;"	A
maxAmount	experiments/new.js	/^var maxAmount = [];$/;"	A
moduleFileExtensions	jest.config.js	/^  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node']$/;"	P
mutate	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.mutate = function (torsionFree) {$/;"	M
n	src/NegClustHelperFcts.js	/^    var n = [(s[0] + 1) % N, (s[1] + 1) % N];$/;"	A
objectEqual	src/NegClustHelperFcts.js	/^function objectEqual(a, b) {$/;"	F
objectEqual	src/NegClustHelperFcts.ts	/^export function objectEqual(a:any[], b:any[]) {$/;"	f
objs	src/NegClustHelperFcts.js	/^    var objs = [];$/;"	A
out	src/NegClustHelperFcts.js	/^    var out = "Read(\\".\/setup.g\\");\\n";$/;"	V
pathAlgebra	src/NegClustHelperFcts.js	/^function pathAlgebra(sms) {$/;"	F
pathAlgebra	src/NegClustHelperFcts.ts	/^export function pathAlgebra(sms: CwObjectCollection){$/;"	f
pathAlgebraOld	src/NegClustHelperFcts.js	/^function pathAlgebraOld(sms) {$/;"	F
pathAlgebraOld	src/NegClustHelperFcts.ts	/^export function pathAlgebraOld(sms: CwObjectCollection){$/;"	f
perp	src/NegClustHelperFcts.js	/^    var perp = [];$/;"	A
qpa	src/NegClustHelperFcts.js	/^function qpa(numVertices, arrows, ideal) {$/;"	F
qpa	src/NegClustHelperFcts.ts	/^export function qpa(numVertices:number, arrows:number[][], ideal:number[][]){$/;"	f
qpaCode	src/NegClustHelperFcts.js	/^        var qpaCode = "cd \/Users\/ank\/master\/drive\/QPA\/scripts && gap --nointeract -b -c '\\n" + mystr + "'";$/;"	V
qpaTorsionClasses	src/NegClustHelperFcts.js	/^function qpaTorsionClasses(sms) {$/;"	F
qpaTorsionClasses	src/NegClustHelperFcts.ts	/^export function qpaTorsionClasses(sms:CwObjectCollection){$/;"	f
randomSimpleMindedSystem	src/NegClustHelperFcts.js	/^function randomSimpleMindedSystem(w, e) {$/;"	F
randomSimpleMindedSystem	src/NegClustHelperFcts.ts	/^export function randomSimpleMindedSystem(w:number, e:number){$/;"	f
removeIndex	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.removeIndex = function (index) { };$/;"	M
removeObject	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.removeObject = function (index) { };$/;"	M
res	src/NegClustHelperFcts.js	/^    var res = "";$/;"	V
resArr	src/NegClustHelperFcts.js	/^    var resArr = [];$/;"	A
rightPerpInCollection	src/NegClustHelperFcts.js	/^function rightPerpInCollection(set, inColl) {$/;"	F
rightPerpInCollection	src/NegClustHelperFcts.ts	/^export function rightPerpInCollection(set:number[][], inColl:CwObjectCollection){$/;"	f
setVerbose	src/NegClustHelperFcts.js	/^function setVerbose(val) { exports.verbose = val; }$/;"	F
setVerbose	src/NegClustHelperFcts.ts	/^export function setVerbose(val: boolean){ verbose = val; }$/;"	f
sms	src/NegClustHelperFcts.js	/^        var sms = new CwObjectCollection(helper(0, N - 1, true), w, e);$/;"	V
step	src/NegClustHelperFcts.js	/^    function step(op) {$/;"	F
str	experiments/article.js	/^        var str = "\\\\dFourTors";$/;"	V
tempIndex	src/NegClustHelperFcts.js	/^    var tempIndex = 0;$/;"	V
test	tests/NegClustHelperFcts.test.js	/^    test("N Cyclic Ordered", function () {$/;"	M
test	tests/NegClustHelperFcts.test.js	/^    test('Homomorphism Dimensions', function () {$/;"	M
test	tests/NegClustHelperFcts.test.js	/^    test('Is Crossing', function () {$/;"	M
test	tests/NegClustHelperFcts.test.js	/^    test('Is w Diagonal', function () {$/;"	M
test	tests/NegClustHelperFcts.test.js	/^    test('N Cyclic dist', function () {$/;"	M
test	tests/NegClustHelperFcts.test.js	/^    test('Sigma', function () {$/;"	M
toString	src/NegClustHelperFcts.js	/^    CwObjectCollection.prototype.toString = function () {$/;"	M
torsion	src/NegClustHelperFcts.js	/^        var torsion = new CwObjectCollection(leftPerpInCollection(torsionFree.objectList, this), this.w, this.e);$/;"	V
torsionFreeClassCollection	src/NegClustHelperFcts.js	/^            var torsionFreeClassCollection = new CwObjectCollection([], sms.w, sms.e);$/;"	V
torsionFreeClassCollectionArray	src/NegClustHelperFcts.js	/^        var torsionFreeClassCollectionArray = [];$/;"	A
transform	jest.config.js	/^  transform: {'^.+\\\\.ts?$': 'ts-jest'},$/;"	P
union	src/NegClustHelperFcts.js	/^function union(A, B) {$/;"	F
union	src/NegClustHelperFcts.ts	/^export function union(A: CwObjectCollection, B: CwObjectCollection){$/;"	f
verb	src/NegClustHelperFcts.js	/^    function verb(n) { return function (v) { return step([n, v]); }; }$/;"	F
w	experiments/ext2.js	/^    var w = 3;$/;"	V
works	experiments/ext2.js	/^var works = [];$/;"	A
